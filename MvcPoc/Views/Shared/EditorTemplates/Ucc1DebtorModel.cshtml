@model MvcPoc.Web.Models.Debtor.Ucc1DebtorModel


<style type="text/css">
    
</style>

<script type="text/javascript">
    $(document).ready(function() {
        $('#Ucc1Debtors_0__SelectedDebtorFavoriteId').change(function (e) {
            var selectedId = $('#Ucc1Debtors_0__SelectedDebtorFavoriteId').val();
            $.get('getFavoriteDebtor/' + selectedId, function (data, status) {
                if(status=='success')
                    pasteResult(data);
            });
        });
    });
    
    function pasteResult(data) {
        $("input[name='Ucc1Debtors[0].FirstName']").val(data.FirstName);
        $("input[name='Ucc1Debtors[0].MiddleName']").val(data.MiddleName);
        $("input[name='Ucc1Debtors[0].LastName']").val(data.LastName);
        $("input[name='Ucc1Debtors[0].Suffix']").val(data.Suffix);
        $("input[name='Ucc1Debtors[0].Title']").val(data.Title);
        $("textarea[name='Ucc1Debtors[0].SeeInstructions']").val(data.SeeInstructions);
    }

</script>

<div class="partial-sections">
    <div class="partial-section" id="debtor-1">
        <div class="section-header">
            <h6>Debtor's Exact Full Legal Name</h6>
            <fieldset>
                <legend>Debtor's Exact Full Legal Name</legend>

                <div class="editor-label">
                    @Html.LabelFor(model => model.SelectedDebtorFavoriteId)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.SelectedDebtorFavoriteId, Model.DebtorFavoriteItems)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.StateCode)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.StateCode, new {@readonly = "readonly"})
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Suffix)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Suffix)
                    @Html.ValidationMessageFor(model => model.Suffix)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Title)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.FirstName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.FirstName)
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.MiddleName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.MiddleName)
                    @Html.ValidationMessageFor(model => model.MiddleName)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.LastName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LastName)
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.SeeInstructions)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.SeeInstructions)
                    @Html.ValidationMessageFor(model => model.SeeInstructions)
                </div>
                @Html.HiddenFor(model => model.CanShowRemoveDebtor)
                @Html.HiddenFor(model => model.IsRemoved)
                @if (Model.CanShowRemoveDebtor)
                {
                    <div class="editor-label">
                    
                    </div>
                    <div class="editor-field">
                        <input type="button" id="@string.Format("{0}-{1}", "Remove-Debtor", Model.Id)" value="Remove Debtor" />
                    </div>
                }
            </fieldset>
     </div>
</div>
<br/>

