@model MvcPoc.Web.Models.CustomValidationModel

@{
    ViewBag.Title = "Try";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    $.validator.unobtrusive.adapters.addSingleVal("notequalto", "other");

    $.validator.addMethod("notequalto", function (value, element, other) {
        return false;
    }, "Invalid data."
    );
    
    function isfieldvalid(value, otherValue) {
        if (value != otherValue)
            return true;

        return false;
    }
</script>

<h2>Try</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>CustomValidationModel</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Property)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Property)
            @Html.ValidationMessageFor(model => model.Property)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DifferentProperty)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DifferentProperty)
            @Html.ValidationMessageFor(model => model.DifferentProperty)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
